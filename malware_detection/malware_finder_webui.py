import eventlet
eventlet.monkey_patch()
from flask import Flask, render_template, request
from flask_socketio import SocketIO, emit
from eventlet.green import subprocess

app = Flask(__name__)
socketio = SocketIO(app, async_mode='eventlet', logger=True, engineio_logger=True)

def run_command(directory, extension, output_filename, quarantine, sid):
    command = ["python3", "./malware_finder.py", "-d", directory, "-e", extension, "-f", output_filename]
    if quarantine:
        command.append('-q')
    process = subprocess.Popen(command, stdout=subprocess.PIPE, shell=False, universal_newlines=True)
    while True:
        output = process.stdout.readline()
        if output == '' and process.poll() is not None:
            break
        if output:
            socketio.emit('scan_result', {'data': output.strip() + '\n'}, room=sid)
    rc = process.poll()
    socketio.emit('scan_finished', {}, room=sid)

@socketio.on('scan')
def handle_scan(message):
    print('received directory: ' + message['directory'])
    print('received extension: ' + message['extension'])
    print('received output file name: ' + message['output'])
    print('received quarantine mode: ' + str(message['quarantine']))
    eventlet.spawn(run_command, message['directory'], message['extension'], message['output'], message['quarantine'], request.sid)    

@socketio.on('disconnect')
def handle_disconnect():
    print('Client disconnected')

@app.route('/')
def index():
    return render_template('index.html')

if __name__ == '__main__':
    socketio.run(app)
